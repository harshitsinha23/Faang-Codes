/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
   void populate(Node*a,Node*b)
    {
        if(a==NULL||b==NULL)
            return;
        if(!b)
        {
            b->next=NULL;
        }
        a->next=b;
        
        populate(a->left,a->right);
        populate(b->left,b->right);
        populate(a->right,b->left);
        
        
    }
    Node* connect(Node* root) {
        if(root==NULL)
            return root;
        root->next=NULL;
        populate(root->left,root->right);
        return root;
    }
};
