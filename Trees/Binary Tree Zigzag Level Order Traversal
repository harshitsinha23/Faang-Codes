/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*>s;
        vector<vector<int>>ans;
        if(root==NULL){
            return {};
        }
        s.push(root);
        int count=0;
        while(!s.empty()){
            vector<int>temp;
            int n=s.size();
            for(int i=0;i<n;i++){
                TreeNode* t=s.front();
                temp.push_back(t->val);
                if(t->left!=NULL){
                    s.push(t->left);
                }
                if(t->right!=NULL){
                    s.push(t->right);
                }
                s.pop();
            }
            vector<int>rev;
            for(int i=temp.size()-1;i>=0;i--){
                rev.push_back(temp[i]);
            }
            if(count%2!=0){
                ans.push_back(rev);
            }
            else{
                ans.push_back(temp);
            }
            count++;
        }
        return ans;
    }
};
